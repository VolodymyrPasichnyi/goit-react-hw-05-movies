{"version":3,"file":"static/js/881.f1b71294.chunk.js","mappings":"+QACA,EAAuB,qB,SCSjBA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAClBC,GAAYD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAgDtB,EA7Cc,WAAO,IAAD,EACjB,GAA0CE,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACjD,GAAkCP,EAAAA,EAAAA,WAAS,GAA3C,eAAOQ,EAAP,KAAkBC,EAAlB,KA2BA,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBJ,EAAJ,CAGF,IAAMK,EAAW,mCAAG,oGAEdF,GAAa,GAFC,UAGKG,EAAAA,EAAAA,IAAeN,GAHpB,UAGRO,EAHQ,OAIdX,EAAiBW,EAAKC,SACK,IAAvBD,EAAKE,cALK,yCAMLC,EAAAA,GAAAA,MAAY,oBANP,yDASdA,EAAAA,GAAAA,MAAA,UAAe,KAAMC,UATP,yBAWdR,GAAa,GAXC,6EAAH,qDAcbE,GAfD,CAgBF,GAAE,CAACL,KAGF,kBAAMY,UAAWC,EAAjB,WACE,SAACpB,EAAD,CACIqB,WA5BwB,SAAAC,GAC9BhB,EAAgB,CAAEiB,MAAOD,GAC1B,KA4BG,SAACxB,EAAD,CACI0B,OAAQtB,IAEXO,IAAa,SAACgB,EAAA,EAAD,MAGpB,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Movies_main__zVRJ-\"};","import { lazy, useState } from \"react\"\nimport { useEffect } from \"react\"\nimport { toast } from \"react-hot-toast\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { searchMovieApi } from \"services/moviesApi\"\nimport { Loader } from 'components/Loader/Loader'\nimport css from '../Movies/Movies.module.css'\n\n\n\nconst MoviesList = lazy(() => import('components/MoviesList/MoviesList'))\nconst SearchBar = lazy(() => import('components/SearchBar/SearchBar'))\n\n\nconst Movies = () => {\n    const [recivedMovies, setRecivedMovies] = useState(null)\n    const [searchParams, setSearchParams] = useSearchParams()\n    const searchQuery = searchParams.get('query') ?? ''\n    const [isLoading, setIsLoading] = useState(false)\n  \n    const handleSearchQueryChange = value => {\n      setSearchParams({ query: value })\n    }\n  \n    useEffect(() => {\n      if (searchQuery === '') {\n        return\n      }\n    const seerchMovie = async () => {\n        try {\n          setIsLoading(true)\n          const data = await searchMovieApi(searchQuery)\n          setRecivedMovies(data.results)\n          if (data.total_results === 0) {\n            return toast.error('No found movies')\n          }\n        } catch (error) {\n          toast.error(`${error.message}`)\n        } finally {\n          setIsLoading(false)\n        }\n    };\n        seerchMovie()\n    }, [searchQuery])\n  \n    return (\n      <main className={css.main}>\n        <SearchBar \n            formSubmit={handleSearchQueryChange}\n        />\n        <MoviesList \n            movies={recivedMovies} \n        />\n        {isLoading && <Loader />}\n      </main>\n    )\n }\n\n\n export default Movies"],"names":["MoviesList","lazy","SearchBar","useState","recivedMovies","setRecivedMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","isLoading","setIsLoading","useEffect","seerchMovie","searchMovieApi","data","results","total_results","toast","message","className","css","formSubmit","value","query","movies","Loader"],"sourceRoot":""}